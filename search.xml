<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>tensorflow入门笔记3:placeholder机制和Variable变量</title>
      <link href="/2019/10/06/tensorflow-ru-men-bi-ji-3-placeholder-ji-zhi-he-variable-bian-liang/"/>
      <url>/2019/10/06/tensorflow-ru-men-bi-ji-3-placeholder-ji-zhi-he-variable-bian-liang/</url>
      
        <content type="html"><![CDATA[<h2 id="1-placeholder-机制"><a href="#1-placeholder-机制" class="headerlink" title="1.placeholder 机制"></a>1.placeholder 机制</h2><ul><li>placeholder 机制的作用</li></ul><blockquote><p>网络的输入数据是一个矩阵，我们把多个这样的矩阵数据打包成一个很大的数据集，如果将这个数据集当作变量或常量一下子输入到网络中，那么就需要定义很多的网络输入常量，于是计算图上将会涌现大量的输入节点。这是不利的，这些节点的利用率很低。<br>placehoder 机制被设计用来解决这个问题。编程时只需要将数据通过 placeholder 传入 TensorFlow 计算图即可。</p></blockquote><ul><li>使用 <code>tf.placeholder()</code></li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tfa <span class="token operator">=</span> tf<span class="token punctuation">.</span>placeholder<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span>shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">"input"</span><span class="token punctuation">)</span> b <span class="token operator">=</span> tf<span class="token punctuation">.</span>placeholder<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span>shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">"input"</span><span class="token punctuation">)</span>result <span class="token operator">=</span> a<span class="token operator">+</span>b<span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess <span class="token punctuation">:</span>  sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>result<span class="token punctuation">,</span>feed_dict<span class="token operator">=</span><span class="token punctuation">{</span>a<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">3.0</span><span class="token punctuation">,</span><span class="token number">4.0</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  ＃输出<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><a id="more"></a><blockquote><p>在 placeholder 定义时，这个位置上的数据类型<code>dtype</code>是需要指定且不可以改变的。 placeholder 中数据的维度信息<code>shape</code>可以根据提供的数据推导得出，所以不一定要给出；或者对于不确定的维度，填入<code>None</code>即可。<br>这里输入<code>a</code>和<code>b</code>定义为常量，这里将它们定义为一个<code>tf.placeholder()</code>，在运行会话时需要通过<code>sess.run()</code>函数的<code>feed_dict</code>来提供<code>a</code>和<code>b</code>的取值。<code>feed_dict</code>是一个字典<code>dict</code>，在字典中需要给出每个用到的<code>placeholder</code>的取值。</p></blockquote><h2 id="2-Varibale变量"><a href="#2-Varibale变量" class="headerlink" title="2.Varibale变量"></a>2.Varibale变量</h2><ul><li><code>tf.Variable()</code>创建变量<pre class="line-numbers language-python"><code class="language-python">tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>initial_value<span class="token punctuation">,</span>           trainable<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>            collections<span class="token operator">=</span>None<span class="token punctuation">,</span>            validate_shape<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>            name<span class="token operator">=</span>None<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><table><thead><tr><th>参数名称</th><th>参数类型</th><th>含义</th></tr></thead><tbody><tr><td>initial_value</td><td>所有可以转换为Tensor的类型</td><td>变量的初始值,一般是随机生成函数的值</td></tr><tr><td>trainable</td><td>bool</td><td>是否加入到<code>GraphKeys.TRAINABLE_VARIABLES</code>被迭代优化</td></tr><tr><td>collections</td><td>list</td><td>指定该图变量的类型、默认为<code>GraphKeys.GLOBAL_VARIABLES</code></td></tr><tr><td>validate_shape</td><td>bool</td><td>是否进行类型和维度检查</td></tr><tr><td>name</td><td>string</td><td>变量的名称，如果没有指定则系统会自动分配一个唯一的值</td></tr></tbody></table><ul><li>在<code>sess</code>对变量运算前初始化所有变量</li></ul><pre class="line-numbers language-python"><code class="language-python">init <span class="token operator">=</span> tf<span class="token punctuation">.</span>global_variables_initializer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess<span class="token punctuation">:</span>  sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>init<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>管理变量的变量空间</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">with</span> tf<span class="token punctuation">.</span>variable_scope<span class="token punctuation">(</span><span class="token string">"one"</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>a <span class="token operator">=</span> tf<span class="token punctuation">.</span>get_variable <span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>initializer<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant_initializer<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><ul><li>以上代码在名为<code>one</code>的变量空间内创建名字为<code>a</code>的变量;</li><li>因为<code>tf.variable_scope(&quot;one&quot;)</code>的参数默认<code>reuse=False</code>,所以在<code>one</code>这个变量空间内不能在创建名字为<code>a</code>的变量；</li><li>若<code>reuse=True</code>则<code>get_variable()</code>函数会直接获取<code>name</code>属性相同的己经创建的变量,获取的变量没创建过则会报错（区别于指定initializer时为创建新变量）</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> tensorflow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow入门笔记2:计算图、张量、会话session</title>
      <link href="/2019/10/06/tensorflow-ru-men-bi-ji-2-ji-suan-tu-zhang-liang-hui-hua-session/"/>
      <url>/2019/10/06/tensorflow-ru-men-bi-ji-2-ji-suan-tu-zhang-liang-hui-hua-session/</url>
      
        <content type="html"><![CDATA[<h2 id="1-计算图"><a href="#1-计算图" class="headerlink" title="1.计算图"></a>1.计算图</h2><ul><li>用户不定义计算图时，系统会自动维护一个默认的计算图,tensorflow 会自动将定义的所有计算添加到默认的计算图</li></ul><pre class="line-numbers language-python"><code class="language-python">tf<span class="token punctuation">.</span>get_default_graph<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 获取当前的默认图</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>用户自己创建计算图，用<code>with</code>创建图指定为默认计算图后,下面的运算都在这个计算图内，变量为该计算图独有，不与其他计算图共享</li></ul><pre class="line-numbers language-python"><code class="language-python">g1 <span class="token operator">=</span> tf<span class="token punctuation">.</span>Graph<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> g1<span class="token punctuation">.</span>as_default<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>  a<span class="token operator">=</span>tf<span class="token punctuation">.</span>get_variable<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>initializer<span class="token operator">=</span>tf<span class="token punctuation">.</span>ones_initializer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  b<span class="token operator">=</span>tf<span class="token punctuation">.</span>get_variable<span class="token punctuation">(</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>initializer<span class="token operator">=</span>tf<span class="token punctuation">.</span>zeros_initializer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>获取某个变量的计算图，如变量<code>a</code></li></ul><pre class="line-numbers language-python"><code class="language-python">a<span class="token punctuation">.</span>graph<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><a id="more"></a><h2 id="2-张量"><a href="#2-张量" class="headerlink" title="2.张量"></a>2.张量</h2><ul><li>张量只是引用了程序中的运算结果而不是一个真正的数组，张量保存的是运算结果的属性，而不是真正的数字</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf a<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>name <span class="token operator">=</span><span class="token string">"a"</span><span class="token punctuation">)</span> b<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3.0</span><span class="token punctuation">,</span><span class="token number">4.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>name <span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">)</span> result<span class="token operator">=</span>a<span class="token operator">+</span>b <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> ＃输出 Tensor <span class="token punctuation">(</span><span class="token string">"add:0"</span>，shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float32<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>add:0</code>:由加法得来的第一个输出<br><code>shape=(2,)</code>:形状为2的数组，只有一个维度，注意不是2*1，<br><code>dtype=float32</code>:元素类型为<code>float32</code></p><blockquote><p>要想获得<code>result</code>的真值需定义会话<code>sess</code>进行真正的运算<br>使用<code>sess.run(result)</code><br>或<code>result.eval(session=sess)</code><br>或<code>sess</code>为默认会话时<code>result.eval()</code> </p></blockquote></blockquote><h2 id="3-会话-Session"><a href="#3-会话-Session" class="headerlink" title="3.会话(Session)"></a>3.会话(Session)</h2><ul><li>定义会话</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 接上</span><span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess <span class="token punctuation">:</span>  tf<span class="token punctuation">.</span>initialize_all_variables<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">print</span><span class="token punctuation">(</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>＃输出［ <span class="token number">4</span><span class="token punctuation">.</span> <span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>指定sess为默认会话</li></ul><pre class="line-numbers language-python"><code class="language-python">sess <span class="token operator">=</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> sess<span class="token punctuation">.</span><span class="token keyword">as</span> default<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token operator">&lt;</span><span class="token keyword">with</span><span class="token operator">-</span>block<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>在定义计算时tensorflow会自动生成一个默认的计算图，如果没有特殊指定，定义的运算会自动加入这个计算图中。通过手动指定，会话也可以成为默认的(tensorflow不会自动生成默认的会话)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> tensorflow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu常用命令</title>
      <link href="/2019/09/16/ubuntu-chang-yong-ming-ling/"/>
      <url>/2019/09/16/ubuntu-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="备份、更换、更新软件源"><a href="#备份、更换、更新软件源" class="headerlink" title="备份、更换、更新软件源"></a>备份、更换、更新软件源</h2><p>备份软件源</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> /etc/apt/sources.list /etc/apt/sources.list.backup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><a id="more"></a><p>修改文件</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vi</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>国内主要软件源</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Ubuntu 官方源  </span>deb http://archive.ubuntu.com/ubuntu/ gutsy main restricted universe multiversedeb http://archive.ubuntu.com/ubuntu/ gutsy-security main restricted universe multiversedeb http://archive.ubuntu.com/ubuntu/ gutsy-updates main restricted universe multiversedeb http://archive.ubuntu.com/ubuntu/ gutsy-proposed main restricted universe multiversedeb http://archive.ubuntu.com/ubuntu/ gutsy-backports main restricted universe multiversedeb-src http://archive.ubuntu.com/ubuntu/ gutsy main restricted universe multiversedeb-src http://archive.ubuntu.com/ubuntu/ gutsy-security main restricted universe multiversedeb-src http://archive.ubuntu.com/ubuntu/ gutsy-updates main restricted universe multiversedeb-src http://archive.ubuntu.com/ubuntu/ gutsy-proposed main restricted universe multiversedeb-src http://archive.ubuntu.com/ubuntu/ gutsy-backports main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#网易163</span>deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 阿里云</span>deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 中科大</span>deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiversedeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiversedeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiversedeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiversedeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiversedeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiversedeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiversedeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiversedeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiversedeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>更新软件源</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p>[bash]修改单用户环境变量文件</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vi</span> ~/.bashrc  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>[bash]修改所有用户环境变量文件</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vi</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="root权限和用户权限切换"><a href="#root权限和用户权限切换" class="headerlink" title="root权限和用户权限切换"></a>root权限和用户权限切换</h2><p> 切换至root权限</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>切换至用户权限</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">su</span> <span class="token operator">&lt;</span>username<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改当前账号(root或普通用户)的密码</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">passwd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改指定用户密码</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">passwd</span> <span class="token operator">&lt;</span>username<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="服务器文件传输"><a href="#服务器文件传输" class="headerlink" title="服务器文件传输"></a>服务器文件传输</h2><p>本地向服务器文件传输</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">scp</span> -r <span class="token operator">&lt;</span>uesrname<span class="token operator">></span>@<span class="token operator">&lt;</span>服务器ip<span class="token operator">></span>：<span class="token operator">&lt;</span>服务器指定文件夹路径<span class="token operator">></span> <span class="token operator">&lt;</span>本地所存文件路径<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>服务器文件下载到本地</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">scp</span> -r  <span class="token operator">&lt;</span>本地所存文件路径<span class="token operator">></span>  <span class="token operator">&lt;</span>uesrname<span class="token operator">></span>@<span class="token operator">&lt;</span>服务器ip<span class="token operator">></span>：<span class="token operator">&lt;</span>服务器指定文件夹路径<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="ssh服务"><a href="#ssh服务" class="headerlink" title="ssh服务"></a>ssh服务</h2><p>安装ssh</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> openssh-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动ssh服务</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">service</span> sshd start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看ssh服务是否开启</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ps</span> -e <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">ssh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过ssh远程访问服务器</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token operator">&lt;</span>username<span class="token operator">></span>@<span class="token operator">&lt;</span>ip<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查看系统信息"><a href="#查看系统信息" class="headerlink" title="查看系统信息"></a>查看系统信息</h2><p>查看系统版本信息</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">uname</span> -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改主机名</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> /etc/hostname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看英伟达GPU型号</p><pre class="line-numbers language-bash"><code class="language-bash">lspci <span class="token operator">|</span> <span class="token function">grep</span> -i nvidia<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看NVIDIA驱动版本</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> dpkg --list <span class="token operator">|</span> <span class="token function">grep</span> nvidia-*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Python安装及包管理"><a href="#Python安装及包管理" class="headerlink" title="Python安装及包管理"></a>Python安装及包管理</h2><p>为python3安装pip</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> apt <span class="token function">install</span> python3-pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看python及其第三方库路径</p><pre class="line-numbers language-bash"><code class="language-bash">python <span class="token comment" spellcheck="true">#python3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>sys<span class="token punctuation">.</span>path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow入门笔记1:指定GPU及分配显存</title>
      <link href="/2019/09/16/tensorflow-ru-men-bi-ji-1-zhi-ding-gpu-ji-fen-pei-xian-cun/"/>
      <url>/2019/09/16/tensorflow-ru-men-bi-ji-1-zhi-ding-gpu-ji-fen-pei-xian-cun/</url>
      
        <content type="html"><![CDATA[<h4 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h4><h4 id="1-安装好tensorflow的gpu版本及其对应CUDA"><a href="#1-安装好tensorflow的gpu版本及其对应CUDA" class="headerlink" title="1.安装好tensorflow的gpu版本及其对应CUDA"></a>1.安装好tensorflow的gpu版本及其对应CUDA</h4><h4 id="2-有GPU"><a href="#2-有GPU" class="headerlink" title="2.有GPU"></a>2.有GPU</h4><a id="more"></a><h2 id="1-指定某一块或多块gpu运行"><a href="#1-指定某一块或多块gpu运行" class="headerlink" title="1.指定某一块或多块gpu运行"></a>1.指定某一块或多块gpu运行</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 指定第二块gpu</span>CUDA_VISIBLE_DEVICES<span class="token operator">=</span>1 python <span class="token punctuation">{</span>xxx<span class="token punctuation">}</span>.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">export</span> CUDA_VISIBLE_DEVICES<span class="token operator">=</span>1python <span class="token punctuation">{</span>xxx<span class="token punctuation">}</span>.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"CUDA_VISIBLE_DEVICES"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"2"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>参数参考：</p><table><thead><tr><th align="left">Environment Variable Syntax</th><th align="left">Results</th></tr></thead><tbody><tr><td align="left">CUDA_VISIBLE_DEVICES=1</td><td align="left">Only device 1 will be seen</td></tr><tr><td align="left">CUDA_VISIBLE_DEVICES=0,1</td><td align="left">Devices 0 and 1 will be visible</td></tr><tr><td align="left">CUDA_VISIBLE_DEVICES=”0,1”</td><td align="left">Same as above, quotation marks are optional</td></tr><tr><td align="left">CUDA_VISIBLE_DEVICES=0,2,3</td><td align="left">Devices 0, 2, 3 will be visible; device 1 is masked</td></tr><tr><td align="left">CUDA_VISIBLE_DEVICES=””</td><td align="left">No GPU will be visible</td></tr></tbody></table><h2 id="2-配置gpu显存使用率"><a href="#2-配置gpu显存使用率" class="headerlink" title="2.配置gpu显存使用率"></a>2.配置gpu显存使用率</h2><h3 id="方法一：通过配置Session的运行参数配置gpu的使用"><a href="#方法一：通过配置Session的运行参数配置gpu的使用" class="headerlink" title="方法一：通过配置Session的运行参数配置gpu的使用"></a>方法一：通过配置Session的运行参数配置gpu的使用</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 通过配置Session的运行参数配置gpu的使用</span>config <span class="token operator">=</span> tf<span class="token punctuation">.</span>ConfigProto<span class="token punctuation">(</span>allow_soft_placement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> allow_soft_placement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>config<span class="token punctuation">.</span>gpu_options<span class="token punctuation">.</span>per_process_gpu_memory_fraction <span class="token operator">=</span> <span class="token number">0.4</span>  <span class="token comment" spellcheck="true">#占用40%显存</span>sess <span class="token operator">=</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span>config<span class="token operator">=</span>config）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参数参考：</p><table><thead><tr><th>Syntax</th><th align="left">Results</th></tr></thead><tbody><tr><td>tf.ConfigProto(log_device_placement=True)</td><td align="left">记录设备指派情况</td></tr><tr><td>tf.ConfigProto(allow_soft_placement=True）</td><td align="left">自动选择一个运行备</td></tr><tr><td>config.gpu_options.allow_growth = True</td><td align="left">动态申请显存</td></tr><tr><td>config.gpu_options.per_process_gpu_memory_fraction = 0.4</td><td align="left">限制GPU使用率</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> tensorflow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
